{"version":3,"file":"static/js/535.73e022a7.chunk.js","mappings":"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","sources":["HeadApp.jsx"],"sourcesContent":["import {\r\n  UseCanvas,\r\n  ScrollScene,\r\n  useScrollRig,\r\n  useImageAsTexture,\r\n  styles,\r\n} from \"@14islands/r3f-scroll-rig\";\r\nimport { ParallaxScrollScene } from \"@14islands/r3f-scroll-rig/powerups\";\r\n\r\nimport * as THREE from 'three'\r\nimport { useRef, useReducer, useMemo, Suspense } from 'react'\r\nimport { Canvas, useFrame } from '@react-three/fiber'\r\nimport { useGLTF, MeshTransmissionMaterial, Environment, Lightformer, Html } from '@react-three/drei'\r\nimport { CuboidCollider, BallCollider, Physics, RigidBody } from '@react-three/rapier'\r\nimport { EffectComposer, N8AO } from '@react-three/postprocessing'\r\nimport { easing } from 'maath'\r\nimport { useInView } from \"react-intersection-observer\";\r\n\r\nconst accents = ['#ff4060', '#20ffa0', '#ffcc00']\r\nconst shuffle = (accent = 0) => [\r\n  { color: '#444', roughness: 0.1 },\r\n  { color: '#444', roughness: 0.75 },\r\n  { color: '#444', roughness: 0.75 },\r\n  { color: 'white', roughness: 0.1 },\r\n  { color: 'white', roughness: 0.75 },\r\n  { color: 'white', roughness: 0.1 },\r\n  { color: accents[accent], roughness: 0.1, accent: true },\r\n  { color: accents[accent], roughness: 0.75, accent: true },\r\n  { color: accents[accent], roughness: 0.1, accent: true }\r\n]\r\n\r\nconst HeadApp = () => {\r\n  return <HeadScene style={{ borderRadius: 30, width: '100%', height: '65vh' }} />\r\n}\r\nexport default HeadApp;\r\n\r\nfunction HeadScene(props) {\r\n  const [accent, click] = useReducer((state) => ++state % accents.length, 0);\r\n  const connectors = useMemo(() => shuffle(accent), [accent]);\r\n  const { ref, inView } = useInView();\r\n  const boxRef = useRef();\r\n\r\n  return (\r\n    <Canvas ref={ref} onClick={click} shadows dpr={[1, 1.5]} gl={{ antialias: false }} camera={{ position: [0, 0, 15], fov: 17.5, near: 1, far: 20 }} frameloop={inView ? 'always' : 'never'} {...props}>\r\n      <color attach=\"background\" args={['#000000']} />\r\n      <ambientLight intensity={0.4} />\r\n      <spotLight position={[10, 10, 10]} angle={0.15} penumbra={1} intensity={1} castShadow />\r\n      <RotatePhysics boxRef={boxRef} />\r\n      <Physics gravity={[1, 0, 0]}>\r\n        <Pointer boxRef={boxRef} />\r\n        <group ref={boxRef}>\r\n          {connectors.map((props, i) => <Connector key={i} {...props} />)}\r\n          <Connector position={[10, 10, 5]}>\r\n            <Model>\r\n              <MeshTransmissionMaterial clearcoat={1} thickness={0.1} anisotropicBlur={0.1} chromaticAberration={0.1} samples={8} resolution={0} />\r\n            </Model>\r\n          </Connector>\r\n        </group>\r\n      </Physics>\r\n      <EffectComposer disableNormalPass multisampling={8}>\r\n        <N8AO distanceFalloff={1} aoRadius={1} intensity={4} />\r\n      </EffectComposer>\r\n      <Environment resolution={256}>\r\n        <group rotation={[-Math.PI / 3, 0, 1]}>\r\n          <Lightformer form=\"circle\" intensity={4} rotation-x={Math.PI / 2} position={[0, 5, -9]} scale={2} />\r\n          <Lightformer form=\"circle\" intensity={2} rotation-y={Math.PI / 2} position={[-5, 1, -1]} scale={2} />\r\n          <Lightformer form=\"circle\" intensity={2} rotation-y={Math.PI / 2} position={[-5, -1, -1]} scale={2} />\r\n          <Lightformer form=\"circle\" intensity={2} rotation-y={-Math.PI / 2} position={[10, 1, 0]} scale={8} />\r\n        </group>\r\n      </Environment>\r\n\r\n      {/* Add the text */}\r\n      <Html style={{ zIndex: -1 }}>\r\n        <div className=\"text-container\">\r\n          <p>A brief pause for a little fun</p>\r\n          <p>and perhaps we can design</p>\r\n          <p>a personal touch just for you too</p>\r\n        </div>\r\n      </Html>\r\n    </Canvas>\r\n  );\r\n}\r\n\r\nfunction RotatePhysics({ boxRef }) {\r\n  useFrame((state, delta) => {\r\n    boxRef.current.rotation.y -= 0.002;\r\n    if (boxRef.current.rotation.y <= -(Math.PI * 2)) {\r\n      boxRef.current.rotation.y = 0;\r\n    }\r\n  });\r\n}\r\n\r\nvar headMovement = 0;\r\n\r\nfunction Connector({ position, children, vec = new THREE.Vector3(), scale, r = THREE.MathUtils.randFloatSpread, accent, ...props }) {\r\n  const api = useRef();\r\n  const pos = useMemo(() => position || [r(10), r(10), r(10)], []);\r\n  useFrame((state, delta) => {\r\n    delta = Math.min(0.1, delta)\r\n\r\n    headMovement += 0.0002;\r\n    if (headMovement >= (Math.PI * 2)) headMovement = 0;\r\n    api.current?.applyImpulse(vec.copy(api.current.translation()).add(new THREE.Vector3(Math.sin(headMovement), 0.5 * Math.cos(headMovement), 0)).negate().multiplyScalar(0.2));\r\n  })\r\n  return (\r\n    <RigidBody linearDamping={4} angularDamping={1} friction={0.1} position={pos} ref={api} colliders={false}>\r\n      {/* <CuboidCollider args={[0.38, 1.27, 0.38]} />\r\n    <CuboidCollider args={[1.27, 0.38, 0.38]} />\r\n    <CuboidCollider args={[0.38, 0.38, 1.27]} /> */}\r\n      <CuboidCollider args={[0.295, 0.9625, 0.295]} />\r\n      <CuboidCollider args={[0.9625, 0.295, 0.295]} />\r\n      <CuboidCollider args={[0.295, 0.295, 0.9625]} />\r\n      {children ? children : <Model {...props} />}\r\n      {accent && <pointLight intensity={4} distance={2.5} color={props.color} />}\r\n    </RigidBody>\r\n  )\r\n}\r\n\r\nfunction Pointer({ vec = new THREE.Vector3(), boxRef }) {\r\n  const ref = useRef()\r\n  useFrame(({ mouse, viewport }) => {\r\n    var vecX = (mouse.x * viewport.width) / 2;\r\n    var vecY = (mouse.y * viewport.height) / 2;\r\n    var vecZ = 0;\r\n\r\n\r\n    ref.current?.setNextKinematicTranslation(vec.set(vecX * Math.cos(boxRef.current.rotation.y), (mouse.y * viewport.height) / 2, -vecX * Math.cos(boxRef.current.rotation.y)))\r\n  })\r\n  return (\r\n    <RigidBody position={[0, 0, 0]} type=\"kinematicPosition\" colliders={false} ref={ref}>\r\n      <BallCollider args={[1]} />\r\n    </RigidBody>\r\n  )\r\n}\r\n\r\nfunction Model({ children, color = 'white', roughness = 0, ...props }) {\r\n  const ref = useRef()\r\n  const { nodes, materials } = useGLTF('/glb/Homie_Jath.glb')\r\n  useFrame((state, delta) => {\r\n    easing.dampC(ref.current.material.color, color, 0.3, delta)\r\n  })\r\n  return (\r\n\r\n    <mesh ref={ref} castShadow receiveShadow scale={2} geometry={nodes.connector.geometry}>\r\n      <meshStandardMaterial metalness={0.5} roughness={roughness} material={materials.base} />\r\n      {children}\r\n    </mesh>\r\n  )\r\n}"],"names":["accents","HeadApp","_jsx","HeadScene","style","borderRadius","width","height","props","accent","click","useReducer","state","length","connectors","useMemo","arguments","undefined","color","roughness","shuffle","ref","inView","useInView","boxRef","useRef","_jsxs","Canvas","onClick","shadows","dpr","gl","antialias","camera","position","fov","near","far","frameloop","children","attach","args","intensity","angle","penumbra","castShadow","RotatePhysics","Physics","gravity","Pointer","map","i","Connector","Model","MeshTransmissionMaterial","clearcoat","thickness","anisotropicBlur","chromaticAberration","samples","resolution","EffectComposer","disableNormalPass","multisampling","N8AO","distanceFalloff","aoRadius","Environment","rotation","Math","PI","Lightformer","form","scale","Html","zIndex","className","_ref","useFrame","delta","current","y","headMovement","_ref2","vec","THREE","r","randFloatSpread","api","pos","_api$current","min","applyImpulse","copy","translation","add","sin","cos","negate","multiplyScalar","RigidBody","linearDamping","angularDamping","friction","colliders","CuboidCollider","distance","_ref3","_ref4","_ref$current","mouse","viewport","vecX","x","setNextKinematicTranslation","set","type","BallCollider","_ref5","nodes","materials","useGLTF","easing","dampC","material","receiveShadow","geometry","connector","metalness","base"],"sourceRoot":""}